#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from project import myService
from project.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  RegisterResponse registerRequest(string username, string password, string name, string email)'
  print '  string login(string username, string password, string mac)'
  print '  LogoutResponse logout(string mac, string key)'
  print '  AddDeviceResponse addDevice(string mac, string devicename, string certfile, string capabilities, string rsakey, string key)'
  print '  RenameDeviceResponse renameDevice(string mac, string devicename, string key)'
  print '  UpdateIpResponse updateIp(string mac, string ip, string key)'
  print '   getDevices(string key)'
  print '  string getGroups( friends, string key)'
  print '  AddGroupResponse addGroup(string gname, string key)'
  print '  AddUserToGroupResponse addUserToGroup(i64 gid, string username, string key)'
  print '  AddDeviceToGroupResponse addDeviceToGroup(i64 gid, string device, string key)'
  print '  AddDeviceToFacebookResponse addDeviceToFacebook(string device, string key)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = myService.Client(protocol)
transport.open()

if cmd == 'registerRequest':
  if len(args) != 4:
    print 'registerRequest requires 4 args'
    sys.exit(1)
  pp.pprint(client.registerRequest(args[0],args[1],args[2],args[3],))

elif cmd == 'login':
  if len(args) != 3:
    print 'login requires 3 args'
    sys.exit(1)
  pp.pprint(client.login(args[0],args[1],args[2],))

elif cmd == 'logout':
  if len(args) != 2:
    print 'logout requires 2 args'
    sys.exit(1)
  pp.pprint(client.logout(args[0],args[1],))

elif cmd == 'addDevice':
  if len(args) != 6:
    print 'addDevice requires 6 args'
    sys.exit(1)
  pp.pprint(client.addDevice(args[0],args[1],args[2],args[3],args[4],args[5],))

elif cmd == 'renameDevice':
  if len(args) != 3:
    print 'renameDevice requires 3 args'
    sys.exit(1)
  pp.pprint(client.renameDevice(args[0],args[1],args[2],))

elif cmd == 'updateIp':
  if len(args) != 3:
    print 'updateIp requires 3 args'
    sys.exit(1)
  pp.pprint(client.updateIp(args[0],args[1],args[2],))

elif cmd == 'getDevices':
  if len(args) != 1:
    print 'getDevices requires 1 args'
    sys.exit(1)
  pp.pprint(client.getDevices(args[0],))

elif cmd == 'getGroups':
  if len(args) != 2:
    print 'getGroups requires 2 args'
    sys.exit(1)
  pp.pprint(client.getGroups(eval(args[0]),args[1],))

elif cmd == 'addGroup':
  if len(args) != 2:
    print 'addGroup requires 2 args'
    sys.exit(1)
  pp.pprint(client.addGroup(args[0],args[1],))

elif cmd == 'addUserToGroup':
  if len(args) != 3:
    print 'addUserToGroup requires 3 args'
    sys.exit(1)
  pp.pprint(client.addUserToGroup(eval(args[0]),args[1],args[2],))

elif cmd == 'addDeviceToGroup':
  if len(args) != 3:
    print 'addDeviceToGroup requires 3 args'
    sys.exit(1)
  pp.pprint(client.addDeviceToGroup(eval(args[0]),args[1],args[2],))

elif cmd == 'addDeviceToFacebook':
  if len(args) != 2:
    print 'addDeviceToFacebook requires 2 args'
    sys.exit(1)
  pp.pprint(client.addDeviceToFacebook(args[0],args[1],))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
